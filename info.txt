Парсер текстового файла (тестовое задание).
Принимает на вход файл с древовидной структурой, разбирает его по узлам, записывает их в массив и выводит данные в текстовый файл такой структуры: (id узла, id вышестоящего узла, имя узла, значение в узле).

--------------
Описание задачи

Интерфейс не важен. Это может быть простое консольное приложение, которое одним из параметров командной строки принимает название входного файла, вторым название выходного файла.

Условие: Есть текстовый формат для хранения произвольных данных, имеющих иерархическую структуру. Синтаксис такой:
имя_узла – строка из букв, цифр, и символа '_', начинающаяся не с цифры
значение_узла – произвольная строка в двойных кавычках, не содержащая символов перевода строки и двойных кавычек
узел ::= имя_узла '=' (значение_узла | список )
список = ‘{’ узел [узел ... ] ‘}’

Пример файла:
shape = {
type = "tetrahedron"
vertices = {
point = { x = "1" y = "0" z = "0" }
point = { x = "0" y = "1" z = "0" }
point = { x = "0" y = "0" z = "1" }
point = { }
point = { x = "1" y = "1" z = "1" }
}
color = { r = "0xFF" g = "0x00" b = "0x80" alpha = "0x80" }
}

Задача: Написать парсер, который принимает на вход файл, содержащий один корневой узел, и построить в памяти древовидное представление данных. Каждому узлу назначить целочисленный id. Затем слить данные в текстовый файл такой структуры: (id узла, id вышестоящего узла, имя узла, значение в узле).
В случае наличия ошибок формата данных, выдавать сообщение вида "Неверный формат данных" и завершать работу.
